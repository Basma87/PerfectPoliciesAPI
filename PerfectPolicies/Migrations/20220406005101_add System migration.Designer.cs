// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerfectPolicies.Models;

namespace PerfectPolicies.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220406005101_add System migration")]
    partial class addSystemmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PerfectPolicies.Models.Option", b =>
                {
                    b.Property<int>("OptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CorrectAnswer")
                        .HasColumnType("bit");

                    b.Property<int>("OptionNumber")
                        .HasColumnType("int");

                    b.Property<string>("OptionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionID")
                        .HasColumnType("int");

                    b.HasKey("OptionID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            OptionID = 1,
                            CorrectAnswer = true,
                            OptionNumber = 1,
                            OptionText = "option A",
                            QuestionID = 1
                        },
                        new
                        {
                            OptionID = 2,
                            CorrectAnswer = true,
                            OptionNumber = 2,
                            OptionText = "option B",
                            QuestionID = 1
                        },
                        new
                        {
                            OptionID = 3,
                            CorrectAnswer = false,
                            OptionNumber = 3,
                            OptionText = "option c",
                            QuestionID = 1
                        },
                        new
                        {
                            OptionID = 4,
                            CorrectAnswer = false,
                            OptionNumber = 4,
                            OptionText = "option D",
                            QuestionID = 1
                        });
                });

            modelBuilder.Entity("PerfectPolicies.Models.Question", b =>
                {
                    b.Property<int>("QuestionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionTopic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuizID")
                        .HasColumnType("int");

                    b.HasKey("QuestionID");

                    b.HasIndex("QuizID");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionID = 1,
                            QuestionText = "what is australia",
                            QuestionTopic = "Qestion Topic one",
                            QuizID = 1
                        },
                        new
                        {
                            QuestionID = 2,
                            QuestionText = "Where  is australia",
                            QuestionTopic = "Qestion Topic Two",
                            QuizID = 1
                        },
                        new
                        {
                            QuestionID = 3,
                            QuestionText = "where is egypt",
                            QuestionTopic = "Qestion Topic Three",
                            QuizID = 1
                        },
                        new
                        {
                            QuestionID = 4,
                            QuestionText = "what is australia",
                            QuestionTopic = "Qestion Topic one",
                            QuizID = 2
                        },
                        new
                        {
                            QuestionID = 5,
                            QuestionText = "Where  is australia",
                            QuestionTopic = "Qestion Topic Two",
                            QuizID = 1
                        },
                        new
                        {
                            QuestionID = 6,
                            QuestionText = "where is egypt",
                            QuestionTopic = "Qestion Topic Three",
                            QuizID = 2
                        });
                });

            modelBuilder.Entity("PerfectPolicies.Models.Quiz", b =>
                {
                    b.Property<int>("QuizID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassPercentage")
                        .HasColumnType("int");

                    b.Property<string>("QuizTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuizTopic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuizID");

                    b.ToTable("Quizes");

                    b.HasData(
                        new
                        {
                            QuizID = 1,
                            Created = new DateTime(2022, 4, 6, 10, 51, 1, 514, DateTimeKind.Local).AddTicks(1817),
                            CreatorName = "Creator 1",
                            PassPercentage = 50,
                            QuizTitle = "Quiz one",
                            QuizTopic = "Quiz Topic one"
                        },
                        new
                        {
                            QuizID = 2,
                            Created = new DateTime(2022, 4, 6, 10, 51, 1, 514, DateTimeKind.Local).AddTicks(9675),
                            CreatorName = "Creator 1",
                            PassPercentage = 50,
                            QuizTitle = "Quiz Two",
                            QuizTopic = "Quiz Topic Two"
                        },
                        new
                        {
                            QuizID = 3,
                            Created = new DateTime(2022, 4, 6, 10, 51, 1, 514, DateTimeKind.Local).AddTicks(9695),
                            CreatorName = "Creator 2",
                            PassPercentage = 50,
                            QuizTitle = "Quiz three",
                            QuizTopic = "Quiz Topic Three"
                        });
                });

            modelBuilder.Entity("PerfectPolicies.Models.UserInfo", b =>
                {
                    b.Property<int>("UserInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserInfoID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserInfoID = 1,
                            Password = "PerfectPolicies!22",
                            UserName = "AdminPerfectPolicies"
                        });
                });

            modelBuilder.Entity("PerfectPolicies.Models.Option", b =>
                {
                    b.HasOne("PerfectPolicies.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("PerfectPolicies.Models.Question", b =>
                {
                    b.HasOne("PerfectPolicies.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("PerfectPolicies.Models.Question", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("PerfectPolicies.Models.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
